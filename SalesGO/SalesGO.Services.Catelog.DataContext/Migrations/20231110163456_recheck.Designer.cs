// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesGO.Services.Catelog.DataContext.DataContext;

#nullable disable

namespace SalesGO.Services.Catelog.DataContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231110163456_recheck")]
    partial class recheck
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Brand", b =>
                {
                    b.Property<int>("brandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("brandId"));

                    b.Property<string>("businessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("brandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<int>("brandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skuCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productId");

                    b.HasIndex("brandId");

                    b.HasIndex("subCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("businessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("Product_Categories");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SelectedField", b =>
                {
                    b.Property<int>("productSelectedFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productSelectedFieldId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("productSubCategoryFieldId")
                        .HasColumnType("int");

                    b.Property<string>("selectedValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productSelectedFieldId");

                    b.HasIndex("productId");

                    b.ToTable("Product_SelectedFields");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SubCategory", b =>
                {
                    b.Property<int>("subCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subCategoryId"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("subCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subCategoryId");

                    b.HasIndex("categoryId");

                    b.ToTable("Product_subCategories");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SubCategoryField", b =>
                {
                    b.Property<int>("subCategoryFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subCategoryFieldId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fieldFormControlId")
                        .HasColumnType("int");

                    b.Property<string>("fieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fieldPreValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fieldTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("subCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subCategoryFieldId");

                    b.HasIndex("fieldFormControlId");

                    b.HasIndex("fieldTypeId");

                    b.HasIndex("subCategoryId");

                    b.ToTable("Product_subCategoryFields");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Setup_FieldFormControl", b =>
                {
                    b.Property<int>("fieldFormControlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fieldFormControlId"));

                    b.Property<bool>("allowPreValues")
                        .HasColumnType("bit");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fieldFormControl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fieldFormControlId");

                    b.ToTable("Setup_FieldFormControls");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Setup_FieldType", b =>
                {
                    b.Property<int>("fieldTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fieldTypeId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fieldTypeId");

                    b.ToTable("Setup_FieldTypes");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product", b =>
                {
                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Brand", "brand")
                        .WithMany("products")
                        .HasForeignKey("brandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Product_SubCategory", "subCategory")
                        .WithMany("products")
                        .HasForeignKey("subCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");

                    b.Navigation("subCategory");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SelectedField", b =>
                {
                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Product", "product")
                        .WithMany("Product_SelectedFields")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SubCategory", b =>
                {
                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Product_Category", "productCategory")
                        .WithMany("product_subCategories")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategory");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SubCategoryField", b =>
                {
                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Setup_FieldFormControl", "fieldFormControl")
                        .WithMany()
                        .HasForeignKey("fieldFormControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Setup_FieldType", "fieldType")
                        .WithMany()
                        .HasForeignKey("fieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesGO.Services.Catelog.Model.Models.Product_SubCategory", "productSubCategory")
                        .WithMany("product_subCategoryFields")
                        .HasForeignKey("subCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fieldFormControl");

                    b.Navigation("fieldType");

                    b.Navigation("productSubCategory");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Brand", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product", b =>
                {
                    b.Navigation("Product_SelectedFields");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_Category", b =>
                {
                    b.Navigation("product_subCategories");
                });

            modelBuilder.Entity("SalesGO.Services.Catelog.Model.Models.Product_SubCategory", b =>
                {
                    b.Navigation("product_subCategoryFields");

                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
